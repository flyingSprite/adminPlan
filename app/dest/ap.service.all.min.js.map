{"version":3,"sources":["ap.service.all.min.js"],"names":["require","define","adminApp","config","marked","service","$http","this","method","url","info","args","console","log","warn","err","directive","restrict","replace","scope","markurl","markData","template","controller","$scope","$sce","setOptions","highlight","code","hljs","highlightAuto","value","undefined","markdownHtml","trustAsHtml","$watch","get","success","data","factory","defaults","useXDomain","serverUrl","serverHost","toUpperCase","headers","Content-Type","transformRequest","$","param","logging","send","self","supportNotification","window","Notification","permission","requestPermission","notice","message"],"mappings":"AAMAA,SAAS,cAAe,yBAMxBC,OAAO,eACJ,WAAY,SAAU,SAAU,UAAW,qBAC5C,SAAUC,EAAUC,EAAQC,GAE5BF,EAASG,QAAQ,cAAe,SAAUC,GACxCC,KAAKJ,OAAS,WACZ,MAAOG,IAAOE,OAAQ,MAAOC,IAAK,oBAGrCJ,QAAQ,UAAW,WAClBE,KAAKG,KAAO,SAASC,GACnBC,QAAQC,IAAIF,IAGdJ,KAAKO,KAAO,SAASH,GACnBC,QAAQE,KAAKH,IAGfJ,KAAKQ,IAAM,SAASJ,GAClBC,QAAQG,IAAIJ,MAGfK,UAAU,QAAS,WAClB,OACEC,SAAU,IACVC,SAAS,EACTC,OACEC,QAAS,IACTC,SAAU,KAEZC,SAAU,0CACVC,WAAY,SAAUC,EAAQC,EAAMnB,GAClCF,EAAOsB,YACLC,UAAW,SAAUC,GACnB,MAAOC,MAAKC,cAAcF,GAAMG,SAGbC,QAAnBR,EAAOH,WACTG,EAAOS,aAAeR,EAAKS,YAAY9B,EAAOoB,EAAOH,WACrDG,EAAOW,OAAO,WACZ,MAAOX,GAAOH,UACb,WACDG,EAAOS,aAAeR,EAAKS,YAAY9B,EAAOoB,EAAOH,cAInCW,QAAnBR,EAAOH,UAA2CW,QAAlBR,EAAOJ,SACxCd,EAAM8B,IAAIZ,EAAOJ,SACdiB,QAAQ,SAASC,GAChBd,EAAOS,aAAeR,EAAKS,YAAY9B,EAAOkC,UAMzDC,QAAQ,aAAc,QAAS,SAAUjC,GACxCA,EAAMkC,SAASC,YAAa,EAC5B7B,QAAQC,IAAIV,EACZ,IAAIuC,GAAY,UAAYvC,EAAOwC,WAAa,YAEhD,OAAO,UAAUxC,GACf,MAAkC,QAA/BA,EAAOK,OAAOoC,eAA0D,OAA/BzC,EAAOK,OAAOoC,cACjDtC,GACLG,IAAKiC,EAAYvC,EAAOM,IACxBD,OAAQL,EAAOK,OAAOoC,cACtBC,SACEC,eAAgB,qCAElBC,iBAAmB,SAAST,GAC1B,MAAaN,UAATM,EACKA,EAEFU,EAAEC,MAAMX,IAEjBA,KAAMnC,EAAOmC,OAEyB,OAA/BnC,EAAOK,OAAOoC,cAChBtC,GACLG,IAAKiC,EAAYvC,EAAOM,IACxBD,OAAO,MACP8B,KAAMnC,EAAOmC,OAJV,WASVjC,QAAQ,UAAY,QAAS,UAAW,SAAUC,EAAO4C,GACxD5C,EAAMkC,SAASC,YAAa,EA4B5BlC,KAAK4C,KAAO,SAAUb,UAa1BrC,OAAO,wBAAyB,YAC9B,SAAUC,GACVA,EAASG,QAAQ,eAAgB,WAC/B,GAAI+C,GAAO7C,IACX6C,GAAKC,qBAAsB,EACrB,gBAAkBC,QAIa,YAA5BC,aAAaC,WACpBJ,EAAKC,qBAAsB,EAGQ,WAA5BE,aAAaC,YACpBD,aAAaE,kBAAkB,SAAUD,GAEpB,YAAfA,IACFJ,EAAKC,qBAAsB,KAX/BD,EAAKC,qBAAsB,EAgB7BD,EAAKM,OAAS,SAASC,GACjBP,EAAKC,qBACP,GAAIE,cAAaI","file":"ap.service.all.min.js","sourcesContent":["\n// define([\n//   './templates/services/initService',\n//   './templates/services/notification-service'], function() {});\n\n\nrequire(['initService', 'notification-service']);\n\n// require(['notification-service'], function () {\n//   console.log('ssssss');\n// });\n\ndefine('initService',\n  ['adminApp', 'config', 'marked', 'angular', 'angular-ui-router'],\n  function (adminApp, config, marked) {\n\n  adminApp.service('InitService', function ($http){\n    this.config = function () {\n      return $http({method: 'GET', url: '/config.json'});\n    };\n  })\n  .service('logging', function(){\n    this.info = function(args) {\n      console.log(args);\n    };\n\n    this.warn = function(args) {\n      console.warn(args);\n    };\n\n    this.err = function(args) {\n      console.err(args);\n    };\n  })\n  .directive('markd', function () {\n    return {\n      restrict: 'E',\n      replace: true,\n      scope: {\n        markurl: '@',\n        markData: '@'\n      },\n      template: '<div ng-bind-html=\"markdownHtml\"></div>',\n      controller: function ($scope, $sce, $http) {\n        marked.setOptions({\n          highlight: function (code) {\n            return hljs.highlightAuto(code).value;\n          }\n        });\n        if ($scope.markData != undefined) {\n          $scope.markdownHtml = $sce.trustAsHtml(marked($scope.markData));\n          $scope.$watch(function () {\n            return $scope.markData;\n          }, function () {\n            $scope.markdownHtml = $sce.trustAsHtml(marked($scope.markData));\n          });\n        }\n\n        if($scope.markData == undefined || $scope.markurl != undefined){\n          $http.get($scope.markurl)\n            .success(function(data) {\n              $scope.markdownHtml = $sce.trustAsHtml(marked(data));\n            });\n        }\n      }\n    }\n  })\n  .factory('adminHttp', ['$http', function ($http){\n    $http.defaults.useXDomain = true;\n    console.log(config);\n    var serverUrl = 'http://' + config.serverHost + '/solutions';\n    // var serverUrl = 'http://www.duastone.com/solutions';\n    return function (config){\n      if(config.method.toUpperCase() == 'POST' || config.method.toUpperCase() == 'PUT') {\n        return $http({\n          url: serverUrl + config.url,\n          method: config.method.toUpperCase(),\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          transformRequest : function(data){\n            if (data === undefined) {\n              return data;\n            }\n            return $.param(data);\n          },\n          data: config.data\n        });\n      } else if (config.method.toUpperCase() == 'GET') {\n        return $http({\n          url: serverUrl + config.url,\n          method:\"GET\",\n          data: config.data\n        });\n      }\n    };\n  }])\n  .service('socket', [ '$http', 'logging', function ($http, logging) {\n    $http.defaults.useXDomain = true;\n    // var socket = new WebSocket('ws://localhost:8080/solutions/point');\n    // var self = this;\n    // var temporyList = [];\n    // socket.onopen = function (){\n\n    //   self.connectSuccess = true;\n    //   angular.forEach(temporyList, function(value){\n    //     socket.send(value);\n    //   });\n    //   temporyList.length = 0;\n    // }\n\n    // socket.onmessage = function(event){\n    //   logging.info(event.data);\n    // }\n\n    // $http({\n    //     url: 'http://localhost:8080/solutions/record',\n    //     method: 'GET'\n    //   }).then(function (data){\n    //     console.log(\"====>\", data);\n    //   }).then(function (err){\n    //     console.log(err);\n    //   });\n\n\n\n    this.send = function (data) {\n      // if(self.connectSuccess){\n      //   socket.send(data);\n      // } else {\n      //   temporyList.push(data);\n      //   logging.warn(\"Web Socket is connecting ... \");\n      // }\n    }\n\n  }]);\n\n});\n\ndefine('notification-service', ['adminApp'],\n  function (adminApp) {\n  adminApp.service('notification', function () {\n    var self = this;\n    self.supportNotification = false;\n    if (!('Notification' in window)) {\n      self.supportNotification = false;\n    }\n    // Let's check whether notification permissions have already been granted\n    else if (Notification.permission === 'granted') {\n      self.supportNotification = true;\n    }\n    // Otherwise, we need to ask the user for permission\n    else if (Notification.permission !== 'denied') {\n      Notification.requestPermission(function (permission) {\n        // If the user accepts, let's create a notification\n        if (permission === \"granted\") {\n          self.supportNotification = true;\n        }\n      });\n    }\n\n    self.notice = function(message) {\n      if (self.supportNotification) {\n        new Notification(message);\n      }\n    }\n  });\n});"],"sourceRoot":"/source/"}